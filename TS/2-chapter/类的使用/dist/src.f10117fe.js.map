{"version":3,"sources":["src/index.ts"],"names":[],"mappings":";;;;;IAAM,MAAM;EAcV;EACA;EACA,gBAAY,IAAY,EAAE,GAAW,EAAE,KAAa,EAAA;IAAA;IAdpD;IACO,IAAA,CAAA,IAAI,GAAW,KAAK;IACpB,IAAA,CAAA,GAAG,GAAW,EAAE;IAChB,IAAA,CAAA,KAAK,GAAW,WAAW;IAElC;IACO,IAAA,CAAA,OAAO,GAAkB,CAAC,IAAI,EAAE,IAAI,CAAC;IAC5C;IAEA;IACA,IAAA,CAAA,SAAS,GAAe,YAAK,CAAE,CAAC;IAK9B,IAAI,CAAC,IAAI,GAAG,IAAI;IAChB,IAAI,CAAC,GAAG,GAAG,GAAG;IACd,IAAI,CAAC,KAAK,GAAG,KAAK;EACpB;EAAC;IAAA;IAAA,OAEM,eAAM,GAAW,EAAE,OAAe,EAAA;MACvC,OAAO,CAAC,GAAG,WAAI,IAAI,CAAC,IAAI,mBAAI,GAAG,qCAAO,OAAO,EAAG;IAClD;EAAC;IAAA;IAAA,OAEM,kBAAM,CAAI;EAAC;EAAA;AAAA,KAIpB;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,cAAc,GAAG,IAAI,MAAM,CAAC,IAAI,EAAE,EAAE,EAAE,OAAO,CAAC;AAClD,cAAc,CAAC,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC;AAEjC,OAAO,CAAC,GAAG,CAAC,cAAc,CAAC","file":"src.f10117fe.js","sourceRoot":"..","sourcesContent":["class Person {\n\n  // 类上定义的属性一定是描绘这个类本身特征的变量，不能把一些无关的变量定义成类属性\n  public name: string = '江小鱼'\n  public age: number = 18\n  public phone: string = '123213123'\n\n  // 引用数据-数组\n  public friends: Array<string> = ['小红', '小兰']\n  // public friends: string[] = ['小红', '小兰']\n  \n  // 引用数据-函数类型的属性【属于引用属性的一种】\n  resolveFn: () => void = () => {}\n\n  // 对象的变量=实例的变量=类的【非静态的】属性=简称属性\n  //  实例属性或者对象属性\n  constructor(name: string, age: number, phone: string) {\n    this.name = name\n    this.age = age\n    this.phone = phone\n  }\n\n  public doEat(who: string, address: string) {\n    console.log(`${this.name}和${who}吃饭，在${address}`)\n  }\n\n  public doStep() {}\n\n}\n\n// 方法2： 通过构造函数 【构造器】来赋值\n// 创建对象一共做了三件事\n// 第一件事: 在堆中为类的某个对象【实例】分配一个空间\n// 第二件事：调用对应的构造函数【构造器】并且把构造器中的各个参数值赋值给对象属性\n//   new Person()自动匹配无参数的构造器\n// 第三件事：把对象赋值给对象变量 【把实例赋值给实例变量】\nlet zhangsanPerson = new Person('张三', 23, '11111')\nzhangsanPerson.doEat(\"李四\", \"王府井\")\n\nconsole.log(zhangsanPerson)"]}